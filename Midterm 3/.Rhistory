Xij.mat.cum
colnames(Xij.mat.cum)=c("2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018")
rownames(Xij.mat.cum)=c("1","2","3","4", "5", "6", "7", "8")
Xij=c(101, 153, 52, 17, 14, 3, 4,1, 99, 121, 76, 32, 10, 3, 1, 110, 182, 80, 20,
21, 2, 160, 197, 82, 38, 19, 161, 254, 85, 46, 185, 201, 86, 178,261, 168)
# explanatory variables: accident year, development year and calendar year
xl=c(1,1,1,1,1,1,1,1,2,2,2,2,2,2,2, 3,3,3,3,3,3, 4,4,4,4,4, 5,5,5,5, 6,6,6,7,7, 8 )
yl=c(0, 1,2,3,4,5,6,7, 0,1,2,3,4,5,6,0,1,2,3,4,5,0,1,2,3,4, 0,1,2,3, 0,1,2, 0,1,0)
zl=xl+yl
TT=8
Xij.mat.cum=Xij.mat=matrix(0, TT, TT)
for(k in 1:length(Xij)){
Xij.mat[xl[k],(yl[k]+1)]=Xij[k]
}
for(k in 1:TT){
Xij.mat.cum[k,]=cumsum(Xij.mat[k,])
}
Xij.mat.cum[Xij.mat==0]=0
f=c()
for(k in 1:(TT-1)){
f[k]=sum(Xij.mat.cum[1:(TT-k),(k+1)])/sum(Xij.mat.cum[1:(TT-k),k])
Xij.mat.cum[(TT-k+1):TT,(k+1)]=Xij.mat.cum[(TT-k+1):TT,k]*f[k]
}
Xij.mat.cum
Si=Xij.mat.cum[,TT]
# Reserve per accident year
Ri=c()
for(i in 1:TT){
Ri[i]=Si[i]-Xij.mat.cum[i,TT-i+1]
}
# Total outstanding loss liability
R=sum(Ri)
TT=8
CL=glm(Xij~as.factor(xl)+ as.factor(yl), poisson(link=log) )
coefs=exp(coef(CL))
alpha.glm=coefs[1]*c(1, coefs[2:TT])
beta.glm=c(1, coefs[(TT+1):(2*TT-1)])
Xij.mat.glm=matrix(0,TT,TT)
A=exp(predict.glm(CL))
for(k in 1:length(Xij)){
Xij.mat.glm[xl[k],(yl[k]+1)]=A[k]
}
CL_mat=Xij.mat
CL_mat.cum=Xij.mat.cum
CL_mat.cum[,1]=CL_mat[,1]
for(k in 2:(TT)){
CL_mat[(TT-k+2):TT,k]=exp(predict.glm(CL,newdata=data.frame(xl=(TT-k+2):TT, yl=rep(k-1,k-1))))
CL_mat.cum[,k]=CL_mat.cum[,(k-1)]+CL_mat[,k]
}
CL_mat.cum
Xij.mat.cum
Xij=c(101, 153, 52, 17, 14, 3, 4,1, 99, 121, 76, 32, 10, 3, 1, 110, 182, 80, 20,
21, 2, 160, 197, 82, 38, 19, 161, 254, 85, 46, 185, 201, 86, 178,261, 168)
xl=c(1,1,1,1,1,1,1,1,2,2,2,2,2,2,2, 3,3,3,3,3,3, 4,4,4,4,4, 5,5,5,5, 6,6,6,7,7, 8 )
yl=c(0, 1,2,3,4,5,6,7, 0,1,2,3,4,5,6,0,1,2,3,4,5,0,1,2,3,4, 0,1,2,3, 0,1,2, 0,1,0)
zl=xl+yl
TT=8
Xij.mat.cum=Xij.mat=matrix(0, TT, TT)
for(k in 1:length(Xij)){
Xij.mat[xl[k],(yl[k]+1)]=Xij[k]
}
for(k in 1:TT){
Xij.mat.cum[k,]=cumsum(Xij.mat[k,])
}
Xij.mat.cum[Xij.mat==0]=0
f=c()
for(k in 1:(TT-1)){
f[k]=sum(Xij.mat.cum[1:(TT-k),(k+1)])/sum(Xij.mat.cum[1:(TT-k),k])
Xij.mat.cum[(TT-k+1):TT,(k+1)]=Xij.mat.cum[(TT-k+1):TT,k]*f[k]
}
colnames(Xij.mat.cum)=c("2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018")
rownames(Xij.mat.cum)=c("1","2","3","4", "5", "6", "7", "8")
Xij.mat.cum
Xij=c(101, 153, 52, 17, 14, 3, 4,1, 99, 121, 76, 32, 10, 3, 1, 110, 182, 80, 20,
21, 2, 160, 197, 82, 38, 19, 161, 254, 85, 46, 185, 201, 86, 178,261, 168)
xl=c(1,1,1,1,1,1,1,1,2,2,2,2,2,2,2, 3,3,3,3,3,3, 4,4,4,4,4, 5,5,5,5, 6,6,6,7,7, 8 )
yl=c(0, 1,2,3,4,5,6,7, 0,1,2,3,4,5,6,0,1,2,3,4,5,0,1,2,3,4, 0,1,2,3, 0,1,2, 0,1,0)
zl=xl+yl
TT=8
Xij.mat.cum=Xij.mat=matrix(0, TT, TT)
for(k in 1:length(Xij)){
Xij.mat[xl[k],(yl[k]+1)]=Xij[k]
}
for(k in 1:TT){
Xij.mat.cum[k,]=cumsum(Xij.mat[k,])
}
Xij.mat.cum[Xij.mat==0]=0
f=c()
for(k in 1:(TT-1)){
f[k]=sum(Xij.mat.cum[1:(TT-k),(k+1)])/sum(Xij.mat.cum[1:(TT-k),k])
Xij.mat.cum[(TT-k+1):TT,(k+1)]=Xij.mat.cum[(TT-k+1):TT,k]*f[k]
}
rownames(Xij.mat.cum)=c("2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018")
colnames(Xij.mat.cum)=c("1","2","3","4", "5", "6", "7", "8")
Xij.mat.cum
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
lines((TT):(TT+l), LB)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
y=Data$APPLE
TT=length(y)
r1=acf(y)$acf[2]
beta1=r1
beta0=mean(y)*(1-r1)
beta0
beta1
##since |b1| < 1, the process is stationary.
arima(y,order=c(1,0,0))
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
yhat=c()
yhat[1]=y[1]
for(i in 2:TT){
yhat[i]=beta0 + beta1*y[i-1] + rnorm(1, 0, s)
}
##These are the predicted y_hat values found using the predicted b0 and b1 values.
plot(dates,Data$APPLE, col="blue", cex=1.5, main="Apple", xlab="time")
Data = read.csv("C:/Users/Luke\\Downloads/STOCKPRICES.csv")
dates=as.Date(Data[,1],origin="1899-12-30")
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
Data = read.csv("C:/Users/Luke\\Downloads/STOCKPRICES.csv")
dates=as.Date(Data[,1],origin="1899-12-30")
Data=read.csv("C:/Users/Luke\\Downloads/STOCKPRICES.csv")
dates=as.Date(Data[,1],origin="1899-12-30")
par(mfrow=c(2,1))
plot(dates[200:400],Data$APPLE[200:400], type='l', col="blue", cex=1.5, main="Apple", xlab="time")
plot(dates[200:400],Data$WALT.DISNEY[200:400], type='l', col="blue", cex=1.5, main="Walt Disney", xlab="time")
plot(Data$APPLE[200:400], Data$WALT.DISNEY[200:400] , col="blue", pch=1, cex=1, main="Scatterplot", xlab="Apple", ylab="Walt Disney")
par(mfrow=c(2,2))
plot(dates[1:50], Data$APPLE[1:50], type='l', xlab="2009" )
plot(dates[51:100], Data$APPLE[51:100], type='l', xlab="2010" )
plot(dates[101:150], Data$APPLE[101:150], type='l', xlab= "2011" )
plot(dates[151:200], Data$APPLE[151:200], type='l', xlab="2012" )
par(mfrow=c(2,2))
plot(dates[2:50], log(Data$APPLE[2:50]/Data$APPLE[1:49]), type='l', xlab="2009" , ylab="log returns", ylim=c(-0.12, 0.1))
plot(dates[52:100], log(Data$APPLE[52:100]/Data$APPLE[51:99]), type='l', xlab="2010" , ylab="log returns", ylim=c(-0.12, 0.1))
plot(dates[102:150], log(Data$APPLE[102:150]/Data$APPLE[101:149]), type='l', xlab= "2011" , ylab="log returns", ylim=c(-0.12, 0.1))
plot(dates[152:200],log(Data$APPLE[152:200]/Data$APPLE[151:199]), type='l', xlab="2012" , ylab="log returns", ylim=c(-0.12, 0.1))
par(mfrow=c(2,1))
plot(dates,Data$APPLE, type='l', col="blue", cex=1.5, main="Apple", xlab="time")
plot(dates[2:431], log(Data$APPLE[2:431]/Data$APPLE[1:430]), type='l',col="blue", cex=1.5, xlab="time" , ylab="log returns", ylim=c(-0.12, 0.1))
s=sd(log(Data$APPLE[2:431]/Data$APPLE[1:430]))
Y=rnorm((length(dates)-1), 0, s)
plot(dates[2:431],Y,type='l', col="blue", cex=1.5, main="White Noise", xlab="time")
C=c(100, rnorm(100, 0, 1))
Y=cumsum(C)
plot(Y, type='l',col="blue", cex=1.5, main="Random Walk")
y=log(Data$APPLE[2:TT]/Data$APPLE[1:(TT-1)])
TT=length(y)
plot(y)
l=1
plot(y[1:(TT-l)], y[(1+l):TT])
cor(y[1:(TT-l)], y[(1+l):TT])
y=Data$APPLE
TT=length(y)
r1=acf(y)$acf[2]
beta1=r1
beta0=mean(y)*(1-r1)
yhat=c()
yhat[1]=y[1]
for(i in 2:TT){
yhat[i]=beta0 + beta1*y[i-1]
}
yhat
plot(dates,y)
points(dates, yhat,pch=20, cex=0.5)
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
plot(E_standardized)
qqnorm(E_standardized)
hist(E,50)
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
y=Data$APPLE
TT=length(y)
r1=acf(y)$acf[2]
beta1=r1
beta0=mean(y)*(1-r1)
beta0
beta1
##since |b1| < 1, the process is stationary.
arima(y,order=c(1,0,0))
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
yhat=c()
yhat[1]=y[1]
for(i in 2:TT){
yhat[i]=beta0 + beta1*y[i-1] + rnorm(1, 0, s)
}
##These are the predicted y_hat values found using the predicted b0 and b1 values.
plot(dates,Data$APPLE, col="blue", cex=1.5, main="Apple", xlab="time")
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
y=Data$APPLE
TT=length(y)
plot(y)
l=1
plot(y[1:(TT-l)], y[(1+l):TT])
cor(y[1:(TT-l)], y[(1+l):TT])
AC=acf(y,type=c("correlation"))
AC
TT=length(Data$APPLE)
y=log(Data$APPLE[2:TT]/Data$APPLE[1:(TT-1)])
y
TT=length(y)
TT
AC_r=acf(y,type=c("correlation"))
se_r=1/sqrt(TT)
AC_r$acf/se_r
yhat[1:10]
plot(dates,Data$APPLE, col="blue", cex=1.5, main="Apple", xlab="time")
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
y=Data$APPLE
TT=length(y)
r1=acf(y)$acf[2]
beta1=r1
beta0=mean(y)*(1-r1)
beta0
beta1
##since |b1| < 1, the process is stationary.
arima(y,order=c(1,0,0))
yhat=c()
yhat[1]=y[1]
for(i in 2:TT){
yhat[i]=beta0 + beta1*y[i-1]
}
yhat[1:10]
##These are the predicted y_hat values found using the predicted b0 and b1 values.
plot(dates,Data$APPLE, col="blue", cex=1.5, main="Apple", xlab="time")
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200))
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200), xlab = "Date", ylab = "Price")
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200), xlab = "Date", ylab = "Price Per Share")
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
plot(dates,Data$APPLE, col="blue", cex=1.5, main="Apple", xlab="time")
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(dates y, xlim=c(0,550), ylim=c(0, 200), xlab = "Date", ylab = "Price Per Share")
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(dates, y, xlim=c(0,550), ylim=c(0, 200), xlab = "Date", ylab = "Price Per Share")
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
E=(y-yhat)
s=sqrt(sum(E^2)/(TT-3))
E_standardized=E/s
l=100
y_forecast=c()
y_forecast[1]=y[TT];
for(i in 2:(l+1)){
y_forecast[i]=beta0+beta1*y_forecast[i-1]
}
ss=s*sqrt(cumsum(beta1^(2*(0:(l-1)))))
LB= c(y[TT], y_forecast[2:(l+1)]-2*ss)
UB=c(y[TT], y_forecast[2:(l+1)]+2*ss)
plot(1:TT, y, xlim=c(0,550), ylim=c(0, 200), xlab = "Date", ylab = "Price Per Share")
points(TT:(TT+l),y_forecast, col="red")
lines((TT):(TT+l), LB)
lines((TT):(TT+l), UB)
y=Data$APPLE
TT=length(y)
plot(y)
l=1
plot(y[1:(TT-l)], y[(1+l):TT])
cor(y[1:(TT-l)], y[(1+l):TT])
AC=acf(y,type=c("correlation"))
AC
TT=length(Data$APPLE)
y=log(Data$APPLE[2:TT]/Data$APPLE[1:(TT-1)])
y
TT=length(y)
TT
AC_r=acf(y,type=c("correlation"))
se_r=1/sqrt(TT)
AC_r$acf/se_r
y=Data$APPLE
TT=length(y)
plot(y)
l=1
plot(y[1:(TT-l)], y[(1+l):TT])
cor(y[1:(TT-l)], y[(1+l):TT])
AC=acf(y,type=c("correlation"))
AC[1:10]
TT=length(Data$APPLE)
y=log(Data$APPLE[2:TT]/Data$APPLE[1:(TT-1)])
TT=length(y)
AC_r=acf(y,type=c("correlation"))
se_r=1/sqrt(TT)
AC_r$acf/se_r
y=Data$APPLE
TT=length(y)
plot(y)
l=1
plot(y[1:(TT-l)], y[(1+l):TT])
cor(y[1:(TT-l)], y[(1+l):TT])
AC=acf(y,type=c("correlation"))
AC[1:10]
TT=length(Data$APPLE)
y=log(Data$APPLE[2:TT]/Data$APPLE[1:(TT-1)])
TT=length(y)
AC_r=acf(y,type=c("correlation"))
se_r=1/sqrt(TT)
Xij=c(101, 153, 52, 17, 14, 3, 4,1, 99, 121, 76, 32, 10, 3, 1, 110, 182, 80, 20,
21, 2, 160, 197, 82, 38, 19, 161, 254, 85, 46, 185, 201, 86, 178,261, 168)
xl=c(1,1,1,1,1,1,1,1,2,2,2,2,2,2,2, 3,3,3,3,3,3, 4,4,4,4,4, 5,5,5,5, 6,6,6,7,7, 8 )
yl=c(0, 1,2,3,4,5,6,7, 0,1,2,3,4,5,6,0,1,2,3,4,5,0,1,2,3,4, 0,1,2,3, 0,1,2, 0,1,0)
zl=xl+yl
TT=8
Xij.mat.cum=Xij.mat=matrix(0, TT, TT)
for(k in 1:length(Xij)){
Xij.mat[xl[k],(yl[k]+1)]=Xij[k]
}
for(k in 1:TT){
Xij.mat.cum[k,]=cumsum(Xij.mat[k,])
}
Xij.mat.cum[Xij.mat==0]=0
f=c()
for(k in 1:(TT-1)){
f[k]=sum(Xij.mat.cum[1:(TT-k),(k+1)])/sum(Xij.mat.cum[1:(TT-k),k])
Xij.mat.cum[(TT-k+1):TT,(k+1)]=Xij.mat.cum[(TT-k+1):TT,k]*f[k]
}
rownames(Xij.mat.cum)=c("2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018")
colnames(Xij.mat.cum)=c("1","2","3","4", "5", "6", "7", "8")
Xij.mat.cum
as.table(Xij.mat.cum)
y=Data$APPLE
TT=length(y)
plot(y)
l=1
plot(y[1:(TT-l)], y[(1+l):TT])
cor(y[1:(TT-l)], y[(1+l):TT])
AC=acf(y,type=c("correlation"))
AC[1:10]
